<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pabpereza - DevSecOps – secrets</title><link>/tags/secrets/</link><description>Recent content in secrets on Pabpereza - DevSecOps</description><generator>Hugo -- gohugo.io</generator><atom:link href="/tags/secrets/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Secrets y configmaps</title><link>/docs/contenedores/kubernetes/secrets_configmaps/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/contenedores/kubernetes/secrets_configmaps/</guid><description>
&lt;p>Kubernetes nos permite compartir información y configuraciones entre el cluster y los distintos recursos de kubernetes.&lt;/p>
&lt;h2 id="secrets">Secrets&lt;/h2>
&lt;p>Los secretos en kubernetes son una forma de almacenar información sensible. Estos se almacenan en una base de datos de forma privada y pueden consumir por otros recursos de kubernetes.&lt;/p>
&lt;p>Podemos obtener, crear o eliminar secretos en kubernetes con los siguientes comandos.&lt;/p>
&lt;p>Listar secretos:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kubectl get secrets
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Crear secretos:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Create a new secret named my-secret with keys for each file in folder bar&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kubectl create secret generic my-secret --from-file&lt;span style="color:#f92672">=&lt;/span>path/to/bar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Create a new secret named my-secret with specified keys instead of names on disk&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kubectl create secret generic my-secret --from-file&lt;span style="color:#f92672">=&lt;/span>ssh-privatekey&lt;span style="color:#f92672">=&lt;/span>path/to/id_rsa --from-file&lt;span style="color:#f92672">=&lt;/span>ssh-publickey&lt;span style="color:#f92672">=&lt;/span>path/to/id_rsa.pub
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Create a new secret named my-secret with key1=supersecret and key2=topsecret&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kubectl create secret generic my-secret --from-literal&lt;span style="color:#f92672">=&lt;/span>key1&lt;span style="color:#f92672">=&lt;/span>supersecret --from-literal&lt;span style="color:#f92672">=&lt;/span>key2&lt;span style="color:#f92672">=&lt;/span>topsecret
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Create a new secret named my-secret using a combination of a file and a literal&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kubectl create secret generic my-secret --from-file&lt;span style="color:#f92672">=&lt;/span>ssh-privatekey&lt;span style="color:#f92672">=&lt;/span>path/to/id_rsa --from-literal&lt;span style="color:#f92672">=&lt;/span>passphrase&lt;span style="color:#f92672">=&lt;/span>topsecret
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Create a new secret named my-secret from an env file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kubectl create secret generic my-secret --from-env-file&lt;span style="color:#f92672">=&lt;/span>path/to/bar.env
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Borrar un secreto:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kubectl delete secret &amp;lt;nombre&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="usando-secretos-en-un-pod">Usando secretos en un pod&lt;/h3>
&lt;p>Un secreto se puede usar en un pod. Podríamos pasarlo como una variable de entorno como en el siguiente ejemplo:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> containers:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - image: mysql:5.5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: dbpod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> env:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: MYSQL_ROOT_PASSWORD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> valueFrom:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> secretKeyRef:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: mysql
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key: password
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>También podríamos montarlo como un volumen en su manifest. Este Requeriría el path donde estamos montando un fichero con el contenido del secreto.
Mounting Secrets as Volumes
You can also mount secrets as files using a volume definition in a pod manifest. The mount path will contain a file whose name will be the key of the secret created with the kubectl create secret step earlier.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> containers:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - image: busybox
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> command:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - sleep
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;3600&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> volumeMounts:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - mountPath: /mysqlsecret
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: mysqlsecret
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: busy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> volumes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: mysqlsecret
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> secret:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> secretName: mmysql
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="crea-un-configmap">Crea un configmap&lt;/h2>
&lt;p>Dado el caracter efímero de un pod en kubernetes necesitamos algún método para compartir ficheros o información entre los contenedores dentro de un pod.&lt;/p>
&lt;h3 id="crear-un-configmap-con-comandos">Crear un configmap con comandos&lt;/h3>
&lt;p>Para crear un config map usamos el siguiente comando:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span> kubectl create configmap &amp;lt;nombre&amp;gt; &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --from-literal&lt;span style="color:#f92672">=&lt;/span>text&lt;span style="color:#f92672">=&lt;/span>&amp;lt;texto&amp;gt; &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --from-file&lt;span style="color:#f92672">=&lt;/span>&amp;lt;fichero&amp;gt; &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --from-file&lt;span style="color:#f92672">=&lt;/span>&amp;lt;directorio&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Este nos permite importar información ya sea text en plano que introduzcamos en el comando (&lt;code>--from-literal=text=&lt;/code>), el contenido de un fichero (&lt;code>--from-file=&lt;/code>) o el contenido de un directorio completo (&lt;code>--from-file=&lt;/code>).&lt;/p>
&lt;p>Podemos consultar el contenido de un configmap con el siguiente comando:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kubectl get configmap &amp;lt;nombre&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Aunque este solo nos mostrará el total de datos y su edad. Podemos obtener el contenido completo especificando la salida en formato yaml:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kubectl get configmap &amp;lt;nombre&amp;gt; -o yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="crear-un-configmap-con-yaml">Crear un configmap con yaml&lt;/h3>
&lt;p>Podríamos declararlo como un yaml para facilitar el almacenamiento de la configuración como código.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">ConfigMap&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">cars&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">namespace&lt;/span>: &lt;span style="color:#ae81ff">default&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">data&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">car.make&lt;/span>: &lt;span style="color:#ae81ff">Opel &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">car.model&lt;/span>: &lt;span style="color:#ae81ff">Astra &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">car.trim&lt;/span>: &lt;span style="color:#ae81ff">OPC&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Para guardar el configmap en el cluster podemos usar el comando:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kubectl create -f &amp;lt;configmap&amp;gt;.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="usar-configmap-en-un-pod">Usar configmap en un pod&lt;/h2>
&lt;h3 id="utilizar-en-el-entorno-de-un-pod">Utilizar en el entorno de un pod&lt;/h3>
&lt;p>Podemos configurar el contenido de un configmap en un pod como variable de entorno así:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apiVersion: v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Pod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: demo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> containers:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> image: nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> env:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: &amp;lt;nombre de la variable de entorno&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> valueFrom:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> configMapKeyRef:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: &amp;lt;nombre_configmap&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key: &amp;lt;clave a usar&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto nos permitiría importar una única clave del configmap.&lt;/p>
&lt;p>También podríamos importar todo el contenido del configmap así:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apiVersion: v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Pod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: demo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> containers:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> image: nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> envFrom:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - configMapRef:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: &amp;lt;nombre_configmap&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Cambiaríamos el &lt;code>configMapKeyRef&lt;/code> por &lt;code>configMapRef&lt;/code> y &lt;code>env&lt;/code> por &lt;code>envFrom&lt;/code>. Por último, borraríamos &lt;code>key&lt;/code> y &lt;code>valueFrom&lt;/code> datos que ya no tendríamos que especificar.&lt;/p>
&lt;h3 id="montar-como-volumen-en-un-pod">Montar como volumen en un pod&lt;/h3>
&lt;p>Podemos montar un configmap como un volumen en un pod. Esta sería una configuración de ejemplO:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apiVersion: v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Pod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: shell-demo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> containers:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> image: nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> volumeMounts:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: car-vol
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mountPath: /etc/cars
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> volumes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: car-vol
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> configMap:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: cars
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="borrar-un-configmap">Borrar un configmap&lt;/h2>
&lt;p>Podemos elimitar este objeto de kubernetes con el comando:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kubectl delete
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>