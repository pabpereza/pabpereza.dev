<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pabpereza - DevSecOps – Seguridad</title><link>/docs/contenedores/seguridad/</link><description>Recent content in Seguridad on Pabpereza - DevSecOps</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 20 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="/docs/contenedores/seguridad/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Trivy</title><link>/docs/contenedores/seguridad/trivy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/contenedores/seguridad/trivy/</guid><description>
&lt;p>Trivy es una herramienta de análisis de vulnerabilidades para contenedores y ficheros de imagen. Es una herramienta de código abierto desarrollada por Aqua Security.&lt;/p>
&lt;p>&lt;a href="https://github.com/aquasecurity/trivy">Repositorio oficial&lt;/a>&lt;/p>
&lt;h2 id="uso-simple">Uso simple&lt;/h2>
&lt;p>El uso simple de trivy nos permite analizar una imagen de docker y obtener un informe con las vulnerabilidades encontradas.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>trivy image &amp;lt;nombre_imagen&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>trivy i &amp;lt;nombre_imagen&amp;gt; &lt;span style="color:#75715e"># Versión corta&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Parámetros:&lt;/p>
&lt;ul>
&lt;li>&lt;code>--exit-code&lt;/code>: Devuelve un código de salida 1 si se encuentra alguna vulnerabilidad.&lt;/li>
&lt;li>&lt;code>--severity&lt;/code>: Filtro de severidad. Valores: &lt;code>UNKNOWN&lt;/code>, &lt;code>LOW&lt;/code>, &lt;code>MEDIUM&lt;/code>, &lt;code>HIGH&lt;/code>, &lt;code>CRITICAL&lt;/code>.&lt;/li>
&lt;li>&lt;code>--ignore-unfixed&lt;/code>: Ignora las vulnerabilidades no arregladas.&lt;/li>
&lt;li>&lt;code>--no-progress&lt;/code>: Desactiva la barra de progreso.&lt;/li>
&lt;li>&lt;code>-o &amp;lt;formato&amp;gt;&lt;/code>: Formato de salida. Valores: &lt;code>table&lt;/code>, &lt;code>json&lt;/code>, &lt;code>template&lt;/code>, &lt;code>template-file&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h3 id="analizar-una-imagen-comprimida">Analizar una imagen comprimida&lt;/h3>
&lt;p>Trivy también puede analizar un comprimido con la imagen. Para ello, se debe utilizar el parámetro &lt;code>--input&lt;/code> y especificar el directorio.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>trivy image --input &amp;lt;directorio&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="analizar-un-sistema-de-ficheros">Analizar un sistema de ficheros&lt;/h3>
&lt;p>Se puede analizar un sistema de ficheros, aunque trivy se limitará a buscar libreías de terceros (declaradas en ficheros &lt;code>package.json&lt;/code>, &lt;code>requirements.txt&lt;/code>, etc`):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>trivy filesystem &amp;lt;directorio&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">``&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="analizar-un-contenedor-en-ejecución">Analizar un contenedor en ejecución&lt;/h3>
&lt;p>Trivy también puede analizar un contenedor en ejecución. Para ello, se debe utilizar el parámetro &lt;code>--input&lt;/code> y especificar el contenedor.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>trivy image --input &amp;lt;nombre_contenedor&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="analizar-un-repositorio">Analizar un repositorio&lt;/h3>
&lt;p>Este comando permite un repositorio de git y analizar ficheros de IaC y de librerías de terceros.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>trivy repo &amp;lt;url_repositorio&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="usos-concretos">Usos concretos&lt;/h2>
&lt;h3 id="entornos-de-cicd">Entornos de CI/CD&lt;/h3>
&lt;p>Trivy puede ser utilizado en entornos de CI/CD para comprobar la seguridad de las imágenes que se van a desplegar. Para ello, se puede utilizar el parámetro &lt;code>--exit-code&lt;/code> para que devuelva un código de salida 1 si se encuentra alguna vulnerabilidad.&lt;/p>
&lt;p>También podríamos utilizar el parámetro &lt;code>--severity&lt;/code> para filtrar las vulnerabilidades por severidad. Por ejemplo, si queremos que devuelva un código de salida 1 si se encuentra alguna vulnerabilidad de severidad alta o crítica, podríamos utilizar el siguiente comando:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>trivy image &amp;lt;nombre_imagen&amp;gt; --exit-code &lt;span style="color:#ae81ff">1&lt;/span> --severity HIGH,CRITICAL
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="ignorar-vulnerabilidades-sin-parchear">Ignorar vulnerabilidades sin parchear&lt;/h3>
&lt;p>Puede dar el caso de que una vulnerabilidad no tenga parche disponible. En este caso, trivy nos mostrará la vulnerabilidad como si estuviera sin parchear. Para ignorar estas vulnerabilidades, se puede utilizar el parámetro &lt;code>--ignore-unfixed&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>trivy image &amp;lt;nombre_imagen&amp;gt; --ignore-unfixed
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="tipos-de-escaneos-en-imágenes">Tipos de escaneos en imágenes&lt;/h3>
&lt;p>Por defecto, trivy analiza las imágenes de docker y busca vulnerabilidades en las librerías de terceros. Sin embargo, también es posible analizar las imágenes de docker para buscar vulnerabilidades en los ficheros de IaC (Infrastructure as Code) y en los ficheros de configuración de la imagen. Para ello, se debe utilizar el parámetro &lt;code>--scan-type&lt;/code> y especificar el tipo de escaneo que queremos realizar. Los valores posibles son: &lt;code>os&lt;/code>, &lt;code>library&lt;/code>, &lt;code>package&lt;/code>, &lt;code>all&lt;/code>.&lt;/p>
&lt;p>Ejemplos:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>trivy image &amp;lt;nombre_imagen&amp;gt; --scan-type os &lt;span style="color:#75715e"># Solo packages de sistema operativo ignorando librerías de terceros&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>trivy image &amp;lt;nombre_imagen&amp;gt; --scan-type library &lt;span style="color:#75715e"># Solo librerías de terceros ignorando packages de sistema operativo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>trivy image &amp;lt;nombre_imagen&amp;gt; --scan-type package &lt;span style="color:#75715e"># Solo packages de sistema operativo y librerías de terceros&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>trivy image &amp;lt;nombre_imagen&amp;gt; --scan-type all &lt;span style="color:#75715e"># Todos los tipos de escaneo&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="saltar-escaneo-de-secretos">Saltar escaneo de secretos&lt;/h3>
&lt;p>Por defecto, trivy también busca secretos en la imagen. Esta labor puede sumar mucho tiempo a nuestros procesos de CI y puede ser que en algunas ramas o situaciones queramos desactivarlo. Esto se podría hacer así:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>trivy image --scanners vuln &amp;lt;nombre_imagen&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>